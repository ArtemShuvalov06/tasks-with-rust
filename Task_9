use std::env;
use std::fs::File;
use std::io::{self, BufRead, Write};


/*
 * Complete the 'timeConversion' function below.
 *
 * The function is expected to return a STRING.
 * The function accepts STRING s as parameter.
 */

 /*



 What I don't like about this task is that I can't connect the library I want
 




*/
fn timeConversion(s: &str) -> String {

    let period = &s[8..];
    
    let mut hour: i32 = s[0..2].parse().unwrap();
    let minutes = &s[3..5];
    let seconds = &s[6..8];

    if period == "AM" {
        
        if hour == 12 {
            hour = 0;
        }
    } else if period == "PM" {
       
        if hour != 12 {
            hour += 12;
        }
    }

    
    format!("{:02}:{minutes}:{seconds}", hour)
}

fn main() {
    let stdin = io::stdin();
    let mut stdin_iterator = stdin.lock().lines();

    let mut fptr = File::create(env::var("OUTPUT_PATH").unwrap()).unwrap();

    let s = stdin_iterator.next().unwrap().unwrap();

    let result = timeConversion(&s);

    writeln!(&mut fptr, "{}", result).ok();
}
